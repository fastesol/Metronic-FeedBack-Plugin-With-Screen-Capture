/*!
 *
 * Feed Back jQuery Plugin.
 *
 * @version
 *   1.1
 *
 * @Dependancy:
 *   jQuery 1.6
 *   metronic (Keen Themes)
 *   html2canvas 0.33
 *
 * @autor:
 *   Muaaz Khalid <muaaz.khalid@fastesol.com>
 *
 * @Date:
 *   16 03 2019 20.30:00
 *
 */
(function(a) {
    a.feedback = {};
    a.feedback.text = {
        label: "Send your feedback",
        steps: {
            first: {
                label: "Add your comment",
                holder: "Type your comment"
            },
            second: {
                label: "Get your preview",
                showSection: "Show section",
                hideSection: "Hide section"
            },
            third: {
                label: "Get your resume",
                comment: "Your comment",
                globalInfo: "Global info",
                applicationInfo: "Application info",
                clientInfo: "Client info"
            }
        },
        action: {
            close: "Close",
            next: "Next",
            resume: "Resume",
            send: "Send"
        },
        alerts: {
            success: {
                label: "Success",
                message: "Feed sended with success."
            },
            error: {
                label: "Error",
                message: "Error in sending feedback!"
            }
        }
    };
    a.fn.feedback = function(q) {
        var M = null,
            i = null,
            u = null,
            o = null,
            y = null,
            t = null,
            f = null,
            mk = null,
            h = null,
            w = null,
            m = null,
            c = null,
            l = null,
            F = null,
            e = null,
            n = null,
            K = null,
            D = null,
            A = [],
            x = 0;

        function J() {
            q = q || {};
            K = q.sendFeedBackPath || "";
            D = q.extraData || null;
            u = {};
            F = {};
            q.elements = i;
            q.loadNextImage = function(N) {
                step = Math.round((N * 0.3) * 100)
            };
            q.beforeStart = function() {
                w = new Date().getTime();
                e = 0;
                k()
            };
            q.beforeLoadingImage = function(N) {
                m = new Date().getTime();
                e = 20;
                k()
            };
            q.beforeConvert = function(N) {
                c = new Date().getTime();
                e = 50;
                k()
            };
            q.beforeRetriveNavigationInfo = function() {
                l = new Date().getTime();
                e = 80;
                k()
            };
            q.finish = function() {
                l = new Date().getTime();
                e = 100;
                k()
            };
            u.status = q.logger || true;
            u.info = function(N) {
                if (u.status && window.console && window.console.info) {
                    console.info(N)
                }
            };
            u.log = function(N) {
                if (u.status && window.console && window.console.log) {
                    console.log(N)
                }
            }
        }

        function k() {
            if (t !== null) {
                t.find(".bar").css("width", e + "%")
            }
        }

        function j(O, P, N) {
            q.complete = function(R) {
                var U = a.extend({}, q);
                if (N) {
                    a.extend(U, {
                        width: parseFloat(O.css("width")),
                        height: parseFloat(O.css("height")),
                        repositionat: {
                            top: O.offset().top,
                            left: O.offset().left
                        }
                    })
                }
                var Q = html2canvas.Parse(O[0], R, U);
                h = a(html2canvas.Renderer(Q, U));
                A.push(h);
                var S = new Date();
                h.css({
                    position: "absolute",
                    display: "none",
                    left: 0,
                    top: 0
                }).appendTo(document.body);
                u.info("Screenshot created in " + ((S.getTime() - w)) + " ms");
                u.info("Getting images in :" + (m - w) + " ms");
                u.info("Loading images in :" + (c - m) + " ms");
                u.info("Convert images in :" + (S.getTime() - c) + " ms");
                try {
                    M = h[0].toDataURL()
                } catch (T) {
                    u.log("Error to load screeshot")
                } finally {
                    if (typeof P === "function") {
                        P()
                    }
                }
            }
        }

        function I() {
            n = 0;
            f = a('<div id="OVERLAY" class="modal hide fade" role="dialog" aria-labelledby="Loader" aria-hidden="true" />');
            f.append('<div class="modal-dialog">');
            f.find('.modal-dialog').append('<div class="modal-content">');
            f.find('.modal-content').append('<div class="modal-header" />');
            f.find('.modal-content').append('<div class="modal-body" />');
            f.find('.modal-content').append('<div class="modal-footer" />');
            f.find('.modal-content').find("div.modal-header").append('<h3 class="modal-title">' + a.feedback.text.label + "</h3>");
            f.find('.modal-content').find("div.modal-header").append('<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>');
            t = a('<div class="progress progress-striped"/>');
            t.append('<div class="progress-bar progress-bar-striped progress-bar-animated bar" style="width: 0%;"></div>');
            f.find('.modal-content').find("div.modal-body").append(t);
            f.find('.modal-content').find("div.modal-footer").append('<button class="btn" data-dismiss="modal" aria-hidden="true">' + a.feedback.text.action.close + "</button>");
            a(i).append(f);
            f.modal({
                keyboard: false
            });
            f.bind("hidden", function(N) {
				s()
            })
        }

        function p() {
            n = 2;
            var R = L();
            var N = [R[0] * 0.75, R[1] * 0.45];
            f.find(".modal-header").find("h3").html(a.feedback.text.steps.second.label);
            f.find(".modal-body").empty();
            f.find(".modal-body").append('<img src="' + M + '" style="width:' + N[0] + "px;height:" + N[1] + 'px"/>');
            var O = a('<div class="mask"/>').css({
				'background': 'rgba(0,0,0,0.1)',
				'background': '-moz-radial-gradient(center,circle closest-corner,rgba(0,0,0,0.36),rgba(0,0,0,0.1))',
				'background': '-ms-radial-gradient(center,circle closest-corner,rgba(0,0,0,0.36),rgba(0,0,0,0.1))',
				'background': '-o-radial-gradient(center,circle closest-corner,rgba(0,0,0,0.36),rgba(0,0,0,0.1))',
				'background': '-webkit-radial-gradient(center,circle closest-corner,rgba(0,0,0,0.36),rgba(0,0,0,0.1))',
				'background': 'radial-gradient(center,circle closest-corner,rgba(0,0,0,0.36),rgba(0,0,0,0.1))',
				'opacity': '.1',
				'position': 'absolute',
				'top': '0',
				'left': '0',
				'width': '100%',
				'left': '0',
				'width': '100%',
				'height': '100%',
				'-moz-user-select': '-moz-none',
				'-khtml-user-select': 'none',
				'-webkit-user-select': 'none',
				'-o-user-select': 'none',
				'user-select': 'none'
			});
            f.find(".modal-body").append(O);
            f.css({
                width: R[0] * 0.8,
                height: R[1] * 0.9,
                left: "10%",
                top: "5%"
            });
            f.find(".modal-dialog").css({
                "max-width": "100%"
            });
			f.find(".modal-body").css({
                "max-height": "9999px",
                position: "relative"
            });
            f.find("#toSecond").remove();
            f.find("div.modal-footer").append('<button class="btn btn-primary" id="toFinal">' + a.feedback.text.action.resume + "</button>");
            f.find("#toFinal").unbind("click").bind("click", function() {
                o = M;
                j(f.find("div.modal-body"), B, true);
                v(f.find("div.modal-body"))
            });
            var S = a('<div class="btn-toolbar" />');
            S.append('<div class="btn-group" data-toggle="buttons-radio" />');
            var P = a('<a id="showBtn" class="btn btn-primary btn-sm" href="javascript:void(0)"><i class="icon-eye-open"></i> ' + a.feedback.text.steps.second.showSection + "</a>");P.click(function() {$('#hideBtn').removeClass('active');});
            var Q = a('<a id="hideBtn" class="btn btn-primary btn-sm" href="javascript:void(0)"><i class="icon-eye-close"></i> ' + a.feedback.text.steps.second.hideSection + " </a>");Q.click(function() {$('#showBtn').removeClass('active');});
            S.find("div.btn-group").append(P).append(Q);
            f.find("div.modal-header h3").append(S);
            P.addClass("active");
            f.find(".mask").bind("mousedown", function(U) {
                if (U.which == 1 && U.button == 0) {
                    var V = H();
                    a(this).data("down", {
                        id: V,
                        startX: U.offsetX ? U.offsetX : U.pageX - a(this).offset().left,
                        startY: U.offsetY ? U.offsetY : U.pageY - a(this).offset().top
                    });
                    var T = g(V, U.offsetX ? U.offsetX : U.pageX - a(this).offset().left, U.offsetY ? U.offsetY : U.pageY - a(this).offset().top, a("#showBtn").hasClass("active"));
                    a(this).parent().append(T)
                } else {
                    a(this).removeData("down")
                }
            });
            a(document).bind("mouseup", function(T) {
                f.find(".mask").removeData("down")
            });
            f.find(".mask").bind("mousemove", function(W) {
                if (a(this).data("down") == undefined) {
                    return
                }
                var V = a(this).data("down");
                var U = a("#" + V.id);
                var T = W.offsetX ? W.offsetX : W.pageX - a(this).offset().left,
                    X = W.offsetY ? W.offsetY : W.pageY - a(this).offset().top;
                if (V.startX < T) {
                    U.css("width", T - V.startX)
                } else {
                    U.css("width", V.startX - T);
                    U.css("left", T)
                }
                if (V.startY < X) {
                    U.css("height", X - V.startY)
                } else {
                    U.css("height", V.startY - X);
                    U.css("top", X)
                }
            })
        }

        function g(S, O, R, N) {
            var P = a("<div id=" + S + "/>");
            P.addClass("boxer");
            if (N) {
                P.addClass("view-box").css({
					'position': 'absolute',
					'border-style': 'solid',
					'border-color': 'white',
					'border': '2px',
					'background': 'red'
				})
            } else {
                P.addClass("hide-box").css({
					'position': 'absolute',
					'border-style': 'solid',
					'border-color': 'white',
					'border': '2px',
					'background': 'black'
				})
            }
            P.css({
                left: O,
                top: R
            });
            var Q = a('<div class="cross" />').css({
				'background-image': 'url(img/cross.png)',
				'width': '30px',
				'height': '30px',
				'cursor': 'pointer',
				'display': 'none',
				'position': 'absolute',
				'right': '-15px',
				'top': '-15px'
			});
            Q.bind("click", function() {
                a(this).parent().remove()
            });
            P.append(Q);
            Q.bind("mouseenter", function() {
                if (parseFloat(a(this).parent().css("width")) > 16 || parseFloat(a(this).parent().css("height")) > 16) {
                    if (a(this).parent().hasClass("view-box")) {
                        a(this).parent().css("opacity", "0.4")
                    } else {
                        a(this).parent().css("opacity", "0.2")
                    }
                    a(this).show()
                }
            }).bind("mouseout", function() {
                if (a(this).parent().hasClass("view-box")) {
                    a(this).parent().css("opacity", "0.2")
                } else {
                    a(this).parent().css("opacity", "1")
                }
                a(this).hide()
            });
            P.bind("mouseenter", function() {
                if (parseFloat(a(this).css("width")) > 16 || parseFloat(a(this).css("height")) > 16) {
                    if (a(this).hasClass("view-box")) {
                        a(this).css("opacity", "0.4")
                    } else {
                        a(this).css("opacity", "0.2")
                    }
                    Q.show()
                }
            }).bind("mouseout", function() {
                if (a(this).hasClass("view-box")) {
                    a(this).css("opacity", "0.2")
                } else {
                    a(this).css("opacity", "1")
                }
                Q.hide()
            });
            return P
        }

        function H() {
            x++;
            return x
        }

        function B() {
            n = 3;
            var Q = L();
            var O = [Q[0] * 0.75, Q[1] * 0.72];
            f.find(".modal-header").find("h3").html(a.feedback.text.steps.third.label);
            f.find(".modal-header").find("div.btn-toolbar").remove();
            f.find("#toFinal").remove();
            f.find("div.modal-footer").append('<button class="btn btn-primary" data-loading-text="sending data..."  id="sendData">' + a.feedback.text.action.send + "</button>");
            f.find("div.modal-body").css({'overflow-y': '-webkit-paged-y'}).empty();
            var R = a("<div />");
            R.css({
                width: O[0],
                height: O[1],
                "float": "left"
            });
            R.append('<div class="preview" style="width:70%;height:65%;float:left;" />');
            R.append('<div class="comment" style="width:30%;height:65%;float:left;" />');
            R.append('<div style="clear:both;" />');
            R.append('<div class="data" style="width:100%;height:30%;float:left; margin-top: 10px;" />');
            R.find("div.preview").append('<img src="' + M + '" style="width:100%;height:100%;" />');
            R.find("div.comment").append('<div class="well m-stack m-stack--hor m-stack--general m-stack--demo" style="height: 87%; padding: 15px;"><div class="m-stack__items"><div class="m-stack__demo-item">' + a.feedback.text.steps.third.comment + '<div class="well"> ' + y + '</div></div></div></div>');
            var N = a('<div class="m-accordion m-accordion--default" id="accordion" role="tablist"/>');
            var P = '<div class="m-accordion__item" >\
						<div class="m-accordion__item-head collapsed"  role="tab" id="{{collapseREF}}_head" data-toggle="collapse" href="#{{collapseREF}}_body" aria-expanded="false">\
							<span class="m-accordion__item-title">{{title}}</span>\
							<span class="m-accordion__item-mode"></span>\
						</div>\
						<div class="m-accordion__item-body collapse" id="{{collapseREF}}_body" class="" role="tabpanel" aria-labelledby="{{collapseREF}}_head">\
							<div class="m-accordion__item-content">\
								<p>\
									{{data}}\
								</p>\
							</div>\
						</div>\
					</div>';
            var S = P.replace(/{{collapseREF}}/g, "globalInfo");
            S = S.replace(/{{action}}/, "in");
            S = S.replace(/{{title}}/, "<strong> " + a.feedback.text.steps.third.globalInfo + " </strong>");
            if (F.global) {
                S = S.replace(/{{data}}/, '<strong> URL </strong>: <a href="' + F.global.url + '" >' + F.global.url + "</a>")
            } else {
                S = S.replace(/{{data}}/, "Empty")
            }
            N.append(S);
            var S = P.replace(/{{collapseREF}}/g, "ApplicationInfo");
            S = S.replace(/{{action}}/, "");
            S = S.replace(/{{title}}/, "<strong> " + a.feedback.text.steps.third.applicationInfo + " </strong>");
            if (F.application) {
                var T = "<strong> Code name </strong>:" + F.application.codeName;
                T += "<br /> <strong>Name </strong>:" + F.application.name;
                T += "<br /><strong> Version </strong>:" + F.application.version;
                T += "<br /><strong> Language </strong>:" + F.application.language;
                T += "<br /><strong> Cookie </strong>:" + F.application.cookie;
                T += "<br /><strong> Java </strong>:" + F.application.java;
                S = S.replace(/{{data}}/, T)
            } else {
                S = S.replace(/{{data}}/, "Empty")
            }
            N.append(S);
            var S = P.replace(/{{collapseREF}}/g, "ClientInfo");
            S = S.replace(/{{action}}/, "");
            S = S.replace(/{{title}}/, "<strong> " + a.feedback.text.steps.third.clientInfo + " </strong>");
            if (F.client) {
                var T = "<strong> Platform </strong>:" + F.client.platform;
                T += "<br /><strong> User Agent </strong>:" + F.client.userAgent;
                T += "<br /><strong> Mime Types </strong>:" + F.client.mimeTypes;
                T += "<br /><strong> Plugins </strong>:" + F.client.plugins;
                S = S.replace(/{{data}}/, T)
            } else {
                S = S.replace(/{{data}}/, "Empty")
            }
            N.append(S);
            N.find(".collapse").on("hidden", function(U) {
                U.stopPropagation()
            });
            R.find("div.data").append(N);
            f.find("div.modal-body").append(R);
            f.find("#sendData").unbind("click").bind("click", function() {
                var U = {};
                U.img64 = M;
                U.comment = y;
                U.debugData = F;
                if (D) {
                    U.extraData = D
                }
                a.ajax({
                    url: K,
                    type: "POST",
                    data: U,
                    beforeSend: function() {
                        f.find("#sendData").button("loading");
                        f.find(".collapse.in").collapse("hide")
                    },
                    success: function(V) {
                        u.info("Feed Sended !");
                        setTimeout(function() {
                            f.modal('hide');
							//s()
                        }, 3000);
                        f.find("div.data").append(G(a.feedback.text.alerts.success.message))
                    },
                    error: function() {
                        u.log("Error in sending feedback !");
                        f.find("div.data").append(G(a.feedback.text.alerts.error.message, true))
                    },
                    complete: function() {
                        f.find("#sendData").button("reset")
                    }
                })
            })
        }

        function E() {
            n = 1;
            f.find(".modal-header").find("h3").html(a.feedback.text.steps.first.label);
            f.find(".modal-body").empty();
            f.find(".modal-body").append('<textarea name="comment" rows="6" class="input-block-level form-control" placeholder="' + a.feedback.text.steps.first.holder + '"></textarea>');
            f.find("div.modal-footer").append('<button class="btn btn-primary" id="toSecond">' + a.feedback.text.action.next + "</button>");
            f.find("#toSecond").unbind("click").bind("click", function() {
                y = f.find("textarea[name=comment]").val();
                p()
            })
        }

        function r(O) {
            var N = false;
            O.unbind("mousedown").bind("mousedown", function(P) {
                if (P.which === 1) {
                    N = true
                }
            });
            O.unbind("mouseup").bind("mouseup", function(P) {
                if (P.which === 1) {
                    N = false
                }
            });
            O.unbind("mousemove").bind("mousemove", function(P) {
                if (a.browser.msie && !(document.documentMode >= 9) && !event.button) {
                    N = false
                }
                if (P.which === 1 && !N) {
                    P.which = 0
                }
            })
        }

        function b() {
            html2canvas.Preload(i[0], q)
        }

        function v(N) {
            html2canvas.Preload(N[0], q)
        }

        function z() {
            q.beforeRetriveNavigationInfo();
            try {
                F.global = {}, F.application = {}, F.client = {};
                F.global.url = String(window.location);
                F.application.codeName = String(navigator.appCodeName);
                F.application.name = String(navigator.appName);
                F.application.version = String(navigator.appVersion);
                F.application.language = String(navigator.language);
                F.application.cookie = (navigator.cookieEnabled) ? "YES" : "NO";
                F.application.java = (navigator.javaEnabled) ? "YES" : "NO";
                F.client.platform = String(navigator.platform);
                F.client.userAgent = String(navigator.userAgent);
                F.client.mimeTypes = "";
                for (var O in navigator.mimeTypes) {
                    F.client.mimeTypes += "[" + String(navigator.mimeTypes[O].type) + "]"
                }
                F.client.plugins = "";
                for (var N in navigator.plugins) {
                    F.client.plugins += "[" + String(navigator.plugins[N].name) + "]"
                }
            } catch (P) {
                u.log("Error in retriving navigation info [" + P + "]!")
            }
            setTimeout(function() {
                E()
            }, 500);
            q.finish()
        }

        function s() {
            f.modal("hide");
            for (var N in A) {
                A[N].remove()
            }
            f.empty();
            f.remove()
        }

        function L() {
            var O = 0,
                N = 0;
            if (typeof(window.innerWidth) == "number") {
                O = window.innerWidth;
                N = window.innerHeight
            } else {
                if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
                    O = document.documentElement.clientWidth;
                    N = document.documentElement.clientHeight
                } else {
                    if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
                        O = document.body.clientWidth;
                        N = document.body.clientHeight
                    }
                }
            }
            return [O, N]
        }

        function G(P, N) {
            var O = a('<div class="alert ' + (N ? "alert-danger" : "alert-success") + '" />');
            O.append('<button type="button" class="close" data-dismiss="alert" style="padding-top: 2px;"></button>');
            O.append("<strong>" + (N ? a.feedback.text.alerts.error.label : a.feedback.text.alerts.success.label) + "!</strong> " + P);
            return O
        }

        function C() {
            J();
            a.extend(this, {
                launch: function() {
                    j(i, z);
                    I();
                    setTimeout(b, 500)
                },
                stop: function() {
                    s()
                },
                sendFeed: function(O) {
                    if (n != 3) {
                        return
                    }
                    var N = {};
                    N.img64 = M;
                    N.comment = y;
                    N.debugData = F;
                    if (D) {
                        N.extraData = D
                    }
                    a.ajax({
                        url: K,
                        type: "POST",
                        data: N,
                        success: function(P) {
                            u.info("Feed Sended !");
                            if (typeof(O) == "function") {
                                O(true)
                            }
                        },
                        error: function() {
                            u.log("Error in sending feedback !");
                            if (typeof(O) == "function") {
                                O(false)
                            }
                        }
                    })
                }
            })
        }
        var d = a(this).data("fastesol.feedback");
        if (d) {
            return d
        }
        i = this;
        d = new C();
        a(i).data("fastesol.feedback", d);
        return d
    }
})(jQuery);